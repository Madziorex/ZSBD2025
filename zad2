----I
DROP TABLE job_history CASCADE CONSTRAINTS;
DROP TABLE employees CASCADE CONSTRAINTS;
DROP TABLE departments CASCADE CONSTRAINTS;
DROP TABLE locations CASCADE CONSTRAINTS;
DROP TABLE countries CASCADE CONSTRAINTS;
DROP TABLE regions CASCADE CONSTRAINTS;
DROP TABLE jobs CASCADE CONSTRAINTS;

----II
CREATE TABLE COUNTRIES AS
SELECT * FROM HR.COUNTRIES;

CREATE TABLE DEPARTMENTS AS
SELECT * FROM HR.DEPARTMENTS;

CREATE TABLE EMPLOYEES AS
SELECT * FROM HR.EMPLOYEES;

CREATE TABLE JOBS AS
SELECT * FROM HR.JOBS;

CREATE TABLE JOB_GRADES AS
SELECT * FROM HR.JOB_GRADES;

CREATE TABLE JOB_HISTORY AS
SELECT * FROM HR.JOB_HISTORY;

CREATE TABLE LOCATIONS AS
SELECT * FROM HR.LOCATIONS;

CREATE TABLE PRODUCTS AS
SELECT * FROM HR.PRODUCTS;

CREATE TABLE REGIONS AS
SELECT * FROM HR.REGIONS;

CREATE TABLE SALES AS
SELECT * FROM HR.SALES;

ALTER TABLE EMPLOYEES ADD CONSTRAINT pk_employees PRIMARY KEY (EMPLOYEE_ID);
ALTER TABLE DEPARTMENTS ADD CONSTRAINT pk_departments PRIMARY KEY (DEPARTMENT_ID);
ALTER TABLE JOBS ADD CONSTRAINT pk_jobs PRIMARY KEY (JOB_ID);
ALTER TABLE REGIONS ADD CONSTRAINT pk_regions PRIMARY KEY (REGION_ID);
ALTER TABLE COUNTRIES ADD CONSTRAINT pk_countries PRIMARY KEY (COUNTRY_ID);
ALTER TABLE LOCATIONS ADD CONSTRAINT pk_locations PRIMARY KEY (LOCATION_ID);
ALTER TABLE JOB_GRADES ADD CONSTRAINT pk_job_grades PRIMARY KEY (GRADE);
ALTER TABLE JOB_HISTORY ADD CONSTRAINT pk_job_history PRIMARY KEY (START_DATE, EMPLOYEE_ID);

ALTER TABLE EMPLOYEES 
ADD CONSTRAINT fk_department FOREIGN KEY(DEPARTMENT_ID) REFERENCES DEPARTMENTS(DEPARTMENT_ID);

ALTER TABLE EMPLOYEES 
ADD CONSTRAINT fk_manager FOREIGN KEY(manager_id) REFERENCES EMPLOYEES(employee_id);

ALTER TABLE JOB_HISTORY
ADD CONSTRAINT fk_jobs FOREIGN KEY(JOB_ID) REFERENCES JOBS(JOB_ID);

ALTER TABLE COUNTRIES
ADD CONSTRAINT fk_regions FOREIGN KEY(region_id) REFERENCES REGIONS(region_id);

ALTER TABLE LOCATIONS
ADD CONSTRAINT fk_countries FOREIGN KEY(country_id) REFERENCES COUNTRIES(country_id);

ALTER TABLE LOCATIONS 
ADD CONSTRAINT fk_countries FOREIGN KEY(country_id) REFERENCES COUNTRIES(country_id);

ALTER TABLE DEPARTMENTS 
ADD CONSTRAINT fk_locations FOREIGN KEY(location_id) REFERENCES LOCATIONS(location_id);

ALTER TABLE DEPARTMENTS 
ADD CONSTRAINT fk_employees FOREIGN KEY(manager_id) REFERENCES EMPLOYEES(employee_id);

ALTER TABLE EMPLOYEES
ADD CONSTRAINT fk_jobs FOREIGN KEY(JOB_ID) REFERENCES JOBS(JOB_ID);

ALTER TABLE JOB_HISTORY
ADD CONSTRAINT fk_departments FOREIGN KEY(DEPARTMENT_ID) REFERENCES DEPARTMENTS(DEPARTMENT_ID);

ALTER TABLE JOB_HISTORY
ADD CONSTRAINT fk_employees_id FOREIGN KEY(EMPLOYEE_ID) REFERENCES EMPLOYEES(EMPLOYEE_ID);

ALTER TABLE SALES
ADD CONSTRAINT fk_employees_sales FOREIGN KEY(employee_id) REFERENCES EMPLOYEES(employee_id);

----III
----1
SELECT LAST_NAME || ', ' || SALARY AS wynagrodzenie FROM EMPLOYEES
WHERE DEPARTMENT_ID IN (20,50)
AND SALARY BETWEEN 2000 AND 7000
ORDER BY LAST_NAME;

----2
SELECT HIRE_DATE, LAST_NAME, SALARY FROM EMPLOYEES
WHERE MANAGER_ID IS NOT NULL
AND EXTRACT(YEAR FROM HIRE_DATE) = 2005
ORDER BY SALARY;

----3
SELECT FIRST_NAME || ' ' || LAST_NAME AS imie_nazwisko, SALARY, PHONE_NUMBER FROM EMPLOYEES
WHERE LAST_NAME LIKE '__e%'
ORDER BY 1 DESC, 2 ASC;

----4
SELECT e.FIRST_NAME || ' ' || e.LAST_NAME AS imie_nazwisko,
ROUND(MONTHS_BETWEEN(MAX(j.END_DATE), MIN(j.START_DATE))) AS months_hire,
CASE WHEN MONTHS_BETWEEN(MAX(j.END_DATE), MIN(j.START_DATE)) <= 150 THEN e.SALARY * 0.10
WHEN MONTHS_BETWEEN(MAX(j.END_DATE), MIN(j.START_DATE)) BETWEEN 151 AND 200 THEN e.SALARY * 0.20
ELSE e.SALARY * 0.30
END AS BONUS
FROM EMPLOYEES e
JOIN JOB_HISTORY j ON e.EMPLOYEE_ID = j.EMPLOYEE_ID
GROUP BY e.FIRST_NAME, e.LAST_NAME, e.SALARY
ORDER BY months_hire;

----5
SELECT 
    department_id,
    SUM(salary) AS suma_zarobkow,
    ROUND(AVG(salary)) AS srednia_zarobkow
FROM employees
GROUP BY department_id
HAVING MIN(salary) > 5000;

----6
SELECT e.last_name AS nazwisko, d.department_id AS nr_departamentu, d.department_name AS nazwa_departamentu, e.job_id AS id_pracy
FROM employees e
JOIN departments d ON e.department_id = d.department_id
JOIN locations l ON d.location_id = l.location_id
WHERE l.city = 'Toronto';

----7
SELECT 
e.first_name || ' ' || e.last_name AS pracownik,
c.first_name || ' ' || c.last_name AS wspolpracownik
FROM employees e
JOIN employees c ON e.department_id = c.department_id
WHERE e.first_name = 'Jennifer'AND e.employee_id <> c.employee_id;

----8
SELECT d.department_id, d.department_name
FROM departments d
LEFT JOIN employees e ON d.department_id = e.department_id
WHERE e.department_id IS NULL;

----9
SELECT 
e.first_name || ' ' || e.last_name AS imie_nazwisko,
e.job_id,
d.department_name AS nazwa_departamentu,
e.salary AS zarobki,
j.grade
FROM employees e
JOIN departments d ON e.department_id = d.department_id
JOIN job_grades j ON e.salary BETWEEN j.min_salary AND j.max_salary;
